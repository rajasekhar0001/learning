RAII  -> Resource Acquisition Is Initialization
-->  Resource Acquisition Is Initialization or RAII, is a C++ programming technique
 which binds the life cycle of a resource that must be acquired before use (allocated heap memory,
 thread of execution, open socket, open file, locked mutex, disk space, database 
 connectionâ€”anything that exists in limited supply) to the lifetime of an object.

Example:

std::mutex m;
 
void bad() 
{
    m.lock();             // acquire the mutex
    f();                  // if f() throws an exception, the mutex is never released
    if (!everything_ok())
        return;           // early return, the mutex is never released
    m.unlock();           // if bad() reaches this statement, the mutex is released
}
 
void good()
{
    std::lock_guard<std::mutex> lk(m); // RAII class: mutex acquisition is initialization
    f();                               // if f() throws an exception, the mutex is released
    if (!everything_ok())
        return;                        // early return, the mutex is released
}                                      // if good() returns normally, the mutex is released
